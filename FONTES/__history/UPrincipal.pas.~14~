unit UPrincipal;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, ToolWin, ImgList, Menus, PlatformDefaultStyleActnCtrls,
  ActnList, ActnMan, jpeg, ExtCtrls, StdCtrls, ShellApi;

type
  TF_Principal = class(TForm)
    MainMenu1: TMainMenu;
    ActionManager1: TActionManager;
    Cadastros1: TMenuItem;
    FichaClnica1: TMenuItem;
    Backup1: TMenuItem;
    MnCadPaciente: TMenuItem;
    MnCadMedicos: TMenuItem;
    N1: TMenuItem;
    MnSair: TMenuItem;
    MnFCAtend: TMenuItem;
    MnFcRelat: TMenuItem;
    BackupBancodedados1: TMenuItem;
    ImageList1: TImageList;
    StatusBar1: TStatusBar;
    ToolBar1: TToolBar;
    ToolButton1: TToolButton;
    ToolButton2: TToolButton;
    ToolButton3: TToolButton;
    ToolButton4: TToolButton;
    actSair: TAction;
    actCadPacient: TAction;
    actUsuarios: TAction;
    Image1: TImage;
    actAtendimento: TAction;
    gbBackup: TGroupBox;
    Label2: TLabel;
    edtLetra: TEdit;
    btnConf: TButton;
    procedure actSairExecute(Sender: TObject);
    procedure actCadPacientExecute(Sender: TObject);
    procedure actUsuariosExecute(Sender: TObject);
    procedure actAtendimentoExecute(Sender: TObject);
    procedure btnConfClick(Sender: TObject);
    procedure BackupBancodedados1Click(Sender: TObject);
    procedure edtLetraExit(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  F_Principal: TF_Principal;
//  vTipoPessoa: string;
implementation

uses UCadpacientes, UCadMedicos, UAtendimento;

{$R *.dfm}

procedure TF_Principal.actAtendimentoExecute(Sender: TObject);
begin
  with TF_Atend.Create(Self) do
    try
      ShowModal;
    finally
      FreeAndNil(F_Atend);
    end;

end;

procedure TF_Principal.actCadPacientExecute(Sender: TObject);
begin
  with TF_CadPacientes.Create(Self) do
    try
      ShowModal;
    finally
      FreeAndNil(F_CadPacientes);
    end;
end;

procedure TF_Principal.actSairExecute(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TF_Principal.actUsuariosExecute(Sender: TObject);
begin
  with TF_CadMed.Create(Self) do
    try
      ShowModal;
    finally
      FreeAndNil(F_CadMed);
    end;

end;

procedure TF_Principal.BackupBancodedados1Click(Sender: TObject);
begin
  gbBackup.Visible := True;
  edtLetra.SetFocus;
end;

procedure TF_Principal.btnConfClick(Sender: TObject);
var Dados: TSHFileOpStruct;
    Origem, Destino, DirName : string;
begin
  GetDir(0,DirName);
  Origem := copy(DirName,1,2)+'\MeusPacientes\*.*';
//  showmessage('Origem: '+origem);
  Destino := edtLetra.Text+':'+'\MeusPacientes\';
  if edtLetra.Text <> '' then
  begin
    FillChar(Dados,SizeOf(Dados), 0);
    with Dados do
    begin
      wFunc := FO_COPY;
      pFrom := PChar(Origem);
      pTo   := PChar(Destino);
      fFlags:= FOF_ALLOWUNDO;
    end;
    SHFileOperation(Dados);
    showmessage('Copia concluida! ');
  end;
  gbBackup.Visible := False;
end;

procedure TF_Principal.edtLetraExit(Sender: TObject);
begin
   btnConf.SetFocus;
end;

end.
